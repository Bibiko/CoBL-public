TODO
====

for Version 0.3
---------------

.. Admonition::

  This needs to be completed before Julia returns in May

- Admin-Auth pages

  * Administrator:

    - add user
    - change user details

  * User

    - view own profile (incl. permissions)
    - view other user's profile (incl. statistics)
    - change password

- Sort out un-logged-in viewers' rights

  This should be fixed by Django 1.2

- Implement permissions/permission groups on all editing actions

- change password view

- report permissions/group membership in profile

- Check that the same alias isn't used twice for different cognates, same
  meaning (e.g. in the 'breathe/life' and 'animal' sets). 
  
  Maybe: dynamically check that the list of aliases corresponds uniquely to a
  list of cognate sets, and apply a new alias to one of the forms (would have
  to check against the aliases used by the other meanings corresponding to the
  form as well).

  Maybe: test for alias collisions with a post-save hook and rename the alias
  if it should ever occur.

- Need a many to many table linking cognate sets to sources: in lots of cases
  we have general information about the reconstructed form: or we could add
  proto-Indo-European to the language list.

  For example, a lot of good ones come from Carl Darling Buck.

- Add comments field to Languages, show it in the sidebar of the /language/
  view

- Duplicate button should duplicate source too

for Version 0.4
---------------

- Add comments field to all editing functions to add comment to version info.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

General
-------

- change language names to something better for e.g. "English St"

- add a url ``/lexeme/XX/view-citation/YY/`` (and ``view-cognate-citation``,
  ``view-cognate``) equivalent to ``edit-citation`` etc., but just highlighting
  the relevant bit (for use in canonical_url)

- Dynamically generate a more interesting Acknowledgements page (feed it a
  LanguageList and a MeaningList argument, and output a list of contributors
  with a measure of their contributions, both who coded the data and the
  sources)

- Include all relevant citations in export functions.

- put some kind of icon for "reliability" against cognate aliases and lexemes

- test what happens when you change a language name (does the data get lost)?

- Use http://docs.djangoproject.com/en/dev/howto/custom-management-commands/ to
  make database-specific management functions (e.g. add users, change user
  permissions, change superuser password, etc)

Development
-----------

- Make a developer site on e.g. google code

- Make another database with the Aslian materials (so we can keep up with
  whether the addition of the kinship module has broken anything of the basic
  db).

- Test starting up a project from scratch (i.e. with no data)

- Do there need to be any import functions?


Stack Overflow
--------------

- Find out how to send messages to AnonymousUser objects

  file://localhost/Users/micdunn/Documents/Django-1.1/docs/_build/html/topics/auth.html#django.contrib.auth.models.User.message_set.create

    "Finally, note that this messages framework only works with users in the
    user database. To send messages to anonymous users, use the session
    framework."

  There is no obvious explanation here however.

  **I've starred an answer to this**

- Why must I install the Sites app to use the flatpages app?

- How can I add extra choices to a selection drop down otherwise based on a
  query?

- Django reversion: retrospectively adding my models to the reversion table...
