TODO
====

for Version 0.3
---------------

- Implement permissions on all editing actions

- fix logout view

- change password view

- report permissions/group membership in profile

- Check that the same alias isn't used twice for different cognates, same
  meaning (e.g. in the 'breathe/life' and 'animal' sets). 
  
  Maybe: dynamically check that the list of aliases corresponds uniquely to a
  list of cognate sets, and apply a new alias to one of the forms (would have
  to check against the aliases used by the other meanings corresponding to the
  form as well).

  Maybe: test for alias collisions with a post-save hook and rename the alias
  if it should ever occur.

- Need a many to many table linking cognate sets to sources: in lots of cases
  we have general information about the reconstructed form: or we could add
  proto-Indo-European to the language list.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

General
-------

- the login_required decorator can be applied in the urls.py file, e.g.::

  from django.contrib.auth.decorators import login_required
  (r'^the_url/', myapp.views.function),
  (r'^the_url/edit/', login_required(myapp.views.function), {"edit":True}),

- Dynamically generate a more interesting Acknowledgements page

- Include all relevant citations in export functions.

- put some kind of icon for "reliability" against cognate aliases and lexemes

- test what happens when you change a language name (does the data get lost)?

- Use http://docs.djangoproject.com/en/dev/howto/custom-management-commands/ to
  make database-specific management functions (e.g. add users, change user
  permissions, change superuser password, etc)

Stack Overflow
--------------

- Find out how to send messages to AnonymousUser objects

  file://localhost/Users/micdunn/Documents/Django-1.1/docs/_build/html/topics/auth.html#django.contrib.auth.models.User.message_set.create

    "Finally, note that this messages framework only works with users in the
    user database. To send messages to anonymous users, use the session
    framework."

  There is no obvious explanation here however.

  **I've starred an answer to this**

- Why must I install the Sites app to use the flatpages app?

- How can I add extra choices to a selection drop down otherwise based on a
  query?

- Django reversion: retrospectively adding my models to the reversion table...
