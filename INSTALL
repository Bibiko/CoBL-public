Installation Guide
========================

1. Dependencies:

  * `Python <http://python.org>`_ from the 2.x series (not the 3.x series)

  * All requirements can be installed using the REQUIREMENTS file::

      pip install -r REQUIREMENTS

    This will ensure that the same versions are installed as the database has
    been tested on.

    If you want to install them individually:

    - Recent `Django <https://www.djangoproject.com/>`_ (currently testing on 1.6.1)

    - Recent `reversion <https://github.com/etianen/django-reversion>`_
      middleware (``pip install django-reversion``; currently using 1.8.0)

    - The `south <http://south.aeracode.org/>`_ schema migration package
      (``pip install South``; currently using 0.8.4)

  * If you're going to do any work on the code, it is useful to install
    `debug_toolbar 
    <https://github.com/django-debug-toolbar/django-debug-toolbar>`_
    (``pip install django-debug-toolbar``; currently using 0.9.4). If debug
    toolbar is available it will be activated when `DEBUG` is set to `True` in
    the `local_settings.py` file; see below.A

  * If you're going to work with the console (e.g. to import data) then is is
    highly desirable to install the `ipython` shell (``pip install ipython``).
  
2. After a clean install, 

  * Run ``python manage.py syncdb`` and add superuser when prompted (this will
    copy ``local_settings.py.dist`` to ``local_settings.py`` and generate a
    secret key) 
    
  * Customize ``local_settings.py`` with name of database etc. If you're doing
    a test then everything can be left at the default values.

      - It's a good idea to move ``local_settings.py`` to a private,
        version-controlled directory _outside_ the ``LexDB`` hierarchy, with a
        symlink ``ln -s ../../path/to/private_settings.py local_settings.py``.
        You can keep more than one version of your private settings file, e.g.
        one pointing to a sqlite test database and one pointing to your
        production server.  

  * Run ``python manage.py migrate`` to update all the database schemas to the
    most current version.

  * Finally, do _one_ of the following:

    - If you want to test the database with some sample data go to the
      ``../dev`` directory and follow the instructions in the top of the
      ``import_csv_data.py`` (this script is explained in the documentation for
      `importing data <https://bitbucket.org/evoling/lexdb/wiki/import_data>`_).

  To inspect the database you can use the development server. Run ``./manage.py
  runserver`` and open a browser at http://127.0.0.1:8000/

3. Development

   * The database code has some (currently not nearly enough) `unit tests
     <https://bitbucket.org/evoling/lexdb/wiki/unit_tests>`_, which introduce
     other dependencies:

     - `lxml <http://pypi.python.org/pypi/lxml/2.3.4#downloads>`_

.. vim:ft=rst
