Installation Guide
========================

1. Dependencies:

  * `Python <http://python.org>`_ from the 2.x series (not the 3.x series)

  * All requirements can be installed using the REQUIREMENTS file::

      pip install -r REQUIREMENTS

    This will ensure that the same versions are installed as the database has
    been tested on.

    If you want to install them individually:

    - Recent `Django <https://www.djangoproject.com/>`_ (currently testing on 1.6.1)

    - Recent `reversion <https://github.com/etianen/django-reversion>`_
      middleware (``pip install django-reversion``; currently using 1.8.0)

    - The `south <http://south.aeracode.org/>`_ schema migration package
      (``pip install South``; currently using 0.8.4)

  * If you're going to work with the console (e.g. to import data) then is is
    highly desirable to install the `ipython` shell (``pip install ipython``).

2. After a clean install, 

  * Run ``./manage.py syncdb`` and add superuser when prompted (this will
    copy ``local_settings.py.dist`` to ``local_settings.py`` and generate a
    secret key) 
    
    - Create a superuser at the prompt::
      
        You just installed Django's auth system, which means you don't have any
        superusers defined.  Would you like to create one now? (yes/no):
        
    - If the version of LexDB you are installing includes database migrations
      you will see the following lines of the output::
      
         Not synced (use migrations):
         - reversion
         - ielex.lexicon
         - ielex.extensional_semantics
         (use ./manage.py migrate to migrate these)
      
      Run ``./manage.py migrate`` as it says. 
    
  * Customize ``local_settings.py`` with name of database etc. If you're doing
    a test almost everything can be left at the default values.
    
      - Change the DEBUG setting to True

      - It's a good idea to move ``local_settings.py`` to a private,
        version-controlled directory _outside_ the ``LexDB`` hierarchy, with a
        symlink ``ln -s ../../path/to/private_settings.py local_settings.py``.
        You can keep more than one version of your private settings file, e.g.
        one pointing to a sqlite test database and one pointing to your
        production server.  

3. Finally, if you want to test the database with some sample data, open the
   django shell using::
   
      ./manage.py shell

   and then from within the shell run (this uses ipython magic functions
   ``%cd`` and ``%run``; without ipython this won't work)::

      # change the working directory of the shell
      %cd dev/andronov
      # run the script there
      %run import_csv_data.py
      # and once it's ready
      exit()

   To inspect the database you can use the development server. Run
   ``./manage.py runserver`` and open a browser at http://127.0.0.1:8000/

3. Development

   * The database code has some (currently not nearly enough) `unit tests
     <https://bitbucket.org/evoling/lexdb/wiki/unit_tests>`_, which introduce
     other dependencies::

       pip install -r REQUIREMENTS-DEV

     The individual packages are:
     
     - `debug_toolbar <https://github.com/django-debug-toolbar/django-debug-toolbar>`_
       (``pip install django-debug-toolbar``; currently using 0.9.4). If debug
       toolbar is available it will be activated when `DEBUG` is set to `True` in
       the `local_settings.py` file.
     - `lxml <http://pypi.python.org/pypi/lxml/2.3.4#downloads>`_
     - cssselect (``pip install cssselect``); used to be part of lxml, now a
       separate project

   * Coverage tests: ``pip install coverage``, then::

       coverage run --source='.' manage.py test ielex 
       coverage html
       open covhtml/index.html

.. vim:ft=rst
